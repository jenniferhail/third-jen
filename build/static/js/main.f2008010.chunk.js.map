{"version":3,"sources":["data.js","app.js","index.js"],"names":["data","id","src","alt","caption","active","App","useState","items","index","setIndex","prevDisabled","setPrevDisabled","nextDisabled","setNextDisabled","x","slider","useRef","useEffect","lastIndex","length","moveSlides","dir","gsap","to","xPercent","duration","console","log","className","ref","el","map","item","itemIndex","position","type","disabled","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAAaA,G,MAAO,CAClB,CACEC,GAAI,EACJC,IAAK,sBACLC,IAAK,0BACLC,QAAS,yBACTC,QAAQ,GAEV,CACEJ,GAAI,EACJC,IAAK,sBACLC,IAAK,0BACLC,QAAS,yBACTC,QAAQ,GAEV,CACEJ,GAAI,EACJC,IAAK,sBACLC,IAAK,4BACLC,QAAS,2BACTC,QAAQ,GAEV,CACEJ,GAAI,EACJC,IAAK,sBACLC,IAAK,2BACLC,QAAS,0BACTC,QAAQ,K,OC2FGC,MA7Gf,WAAgB,IAAD,EACaC,mBAASP,GADtB,mBACNQ,EADM,aAEaD,mBAAS,IAFtB,mBAENE,EAFM,KAECC,EAFD,OAI2BH,oBAAS,GAJpC,mBAINI,EAJM,KAIQC,EAJR,OAK2BL,oBAAS,GALpC,mBAKNM,EALM,KAKQC,EALR,KAOTC,EAAI,EAEJC,EAASC,iBAAO,MAEPA,iBAAO,MAEpBC,qBAAU,WACR,IAAMC,EAAYX,EAAMY,OAAS,EAEnB,IAAVX,IACFG,GAAgB,GAChBE,GAAgB,IAGdL,EAAQ,IACVG,GAAgB,GAChBE,GAAgB,IAGdL,IAAUU,IACZP,GAAgB,GAChBE,GAAgB,MAEjB,CAACL,EAAOD,IAGX,IAKMa,EAAa,SAACC,GAClBZ,EAASD,EAAQa,GACjBP,EAAoB,KAAfN,EAAQa,IAAc,EAE3BC,IAAKC,GAAGR,EAAQ,CACdS,SAAUV,EACVW,SAAU,KAVZC,QAAQC,IAAI,aAgBd,OACE,sBAAMC,UAAU,MAAhB,SACE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,gBAAgBC,IAAK,SAACC,GAAD,OAASf,EAASe,GAAtD,SACGvB,EAAMwB,KAAI,SAACC,EAAMC,GAAe,IACvBjC,EAAiBgC,EAAjBhC,GAAIC,EAAa+B,EAAb/B,IAAKC,EAAQ8B,EAAR9B,IACbgC,EAAW,GAOf,OANID,IAAczB,IAChB0B,EAAW,WAETD,EAAYzB,IACd0B,EAAW,YAGX,qBAEEN,UAAS,eAAUM,GACnBL,IAAK,SAACC,GAAD,OAAkBA,GAHzB,SAKE,qBAAK7B,IAAKA,EAAKC,IAAKA,KAJfF,QASb,qBAAK4B,UAAU,WAAf,SACGrB,EAAMwB,KAAI,SAACC,EAAMC,GAChB,IAAIC,EAAW,GAOf,OANID,IAAczB,IAChB0B,EAAW,WAETD,EAAYzB,IACd0B,EAAW,YAEN,qBAAmBN,UAAS,iBAAYM,IAA9BF,EAAKhC,SAG1B,sBAAK4B,UAAU,WAAf,UACE,wBACEO,KAAK,SACLP,UAAU,WACVQ,SAAU1B,EACV2B,QAAS,kBAAMjB,GAAY,IAJ7B,SAME,qBAAKnB,IAAI,cAAcC,IAAI,0BAE7B,wBACEiC,KAAK,SACLP,UAAU,WACVQ,SAAUxB,EACVyB,QAAS,kBAAMjB,EAAW,IAJ5B,SAME,qBAAKnB,IAAI,cAAcC,IAAI,+BCzGvCoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f2008010.chunk.js","sourcesContent":["export const data = [\n  {\n    id: 1,\n    src: \"../slides/img01.png\",\n    alt: \"Alt text for image one.\",\n    caption: \"Caption for image one.\",\n    active: true,\n  },\n  {\n    id: 2,\n    src: \"../slides/img02.png\",\n    alt: \"Alt text for image two.\",\n    caption: \"Caption for image two.\",\n    active: false,\n  },\n  {\n    id: 3,\n    src: \"../slides/img03.png\",\n    alt: \"Alt text for image three.\",\n    caption: \"Caption for image three.\",\n    active: false,\n  },\n  {\n    id: 4,\n    src: \"../slides/img04.png\",\n    alt: \"Alt text for image four.\",\n    caption: \"Caption for image four.\",\n    active: false,\n  },\n];\n\n// export const query = `\n// {\n//   pageCollection {\n//     items {\n//       title\n//       logo {\n//         url\n//       }\n//       sliderBlockCollection (limit:4) {\n//         items {\n//           image {\n//             url\n//           }\n//           altText\n//           caption\n//         }\n//       }\n//     }\n//   }\n// }\n// `;\n","// React\nimport React, { useState, useEffect, useRef } from \"react\";\n// CSS\nimport \"./app.scss\";\n// Data\nimport { data } from \"./data\";\n// Animations\nimport { gsap } from \"gsap\";\n\nfunction App() {\n  const [items, setItems] = useState(data);\n  const [index, setIndex] = useState(0);\n  // disabling the slider buttons at start and end\n  const [prevDisabled, setPrevDisabled] = useState(false);\n  const [nextDisabled, setNextDisabled] = useState(false);\n\n  let x = 0;\n  // let sliderRef = [];\n  let slider = useRef(null);\n  // let slidesRef = [];\n  let slides = useRef(null);\n\n  useEffect(() => {\n    const lastIndex = items.length - 1;\n    // Disable prev btn at last slide\n    if (index === 0) {\n      setPrevDisabled(true);\n      setNextDisabled(false);\n    }\n    // Enable both btns if slide isn't first or last\n    if (index > 0) {\n      setPrevDisabled(false);\n      setNextDisabled(false);\n    }\n    // Disable next btn at last slide\n    if (index === lastIndex) {\n      setPrevDisabled(false);\n      setNextDisabled(true);\n    }\n  }, [index, items]);\n\n  // Counter animation\n  const moveDots = () => {\n    console.log(\"moveDots\");\n  };\n\n  // Slide movement\n  const moveSlides = (dir) => {\n    setIndex(index + dir);\n    x = (index + dir) * 100 * -1;\n\n    gsap.to(slider, {\n      xPercent: x,\n      duration: 0.6,\n    });\n\n    moveDots();\n  };\n\n  return (\n    <main className=\"app\">\n      <div className=\"slider\">\n        <div className=\"slide-wrapper\" ref={(el) => (slider = el)}>\n          {items.map((item, itemIndex) => {\n            const { id, src, alt } = item;\n            let position = \"\";\n            if (itemIndex === index) {\n              position = \" active\";\n            }\n            if (itemIndex < index) {\n              position = \" visited\";\n            }\n            return (\n              <div\n                key={id}\n                className={`slide${position}`}\n                ref={(el) => (slides = el)}\n              >\n                <img src={src} alt={alt} />\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"counters\">\n          {items.map((item, itemIndex) => {\n            let position = \"\";\n            if (itemIndex === index) {\n              position = \" active\";\n            }\n            if (itemIndex < index) {\n              position = \" visited\";\n            }\n            return <div key={item.id} className={`counter${position}`}></div>;\n          })}\n        </div>\n        <div className=\"controls\">\n          <button\n            type=\"button\"\n            className=\"prev btn\"\n            disabled={prevDisabled}\n            onClick={() => moveSlides(-1)}\n          >\n            <img src=\"./arrow.svg\" alt=\"View previous slide\" />\n          </button>\n          <button\n            type=\"button\"\n            className=\"next btn\"\n            disabled={nextDisabled}\n            onClick={() => moveSlides(1)}\n          >\n            <img src=\"./arrow.svg\" alt=\"View next slide\" />\n          </button>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./app\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}